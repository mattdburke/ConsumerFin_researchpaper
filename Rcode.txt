# Title: R script for analysing/plotting 

# Description: This program creates plots and conducts analysis of the wonga data in R

# Author: Matt Burke

# Last modified: 30/10/2018


setwd("C:/Users/mattb/Documents/University/PhD/Project_ConsumerFinance")

library(psych)
library(multcomp)

data.frame<-read.csv("data.csv", header=TRUE)

ID<-data.frame[,1]
APRexplain<-data.frame[,2]
ComplexCount<-data.frame[,3]
FinancetoComplex<-data.frame[,4]
F<-data.frame[,5]
FK<-data.frame[,6]
Fog<-data.frame[,7]
Sentcount<-data.frame[,8]
SuperComplexCount<-data.frame[,9]
SuperFinancetoComplex<-data.frame[,10]
Terms<-data.frame[,11]
Wordcount<-data.frame[,12]
Category<-data.frame[,13]
data.frame["TermstoWords"]<-Terms/Wordcount
data.frame["PCcomplex"]<-ComplexCount/Wordcount
data.frame["SPCcomplex"]<-SuperComplexCount/Wordcount
data.frame["WordsperSentence"]<-Wordcount/Sentcount
TermstoWords<-Terms/Wordcount
PCcomplex<-ComplexCount/Wordcount
SPCcomplex<-SuperComplexCount/Wordcount
WordsperSentence<-Wordcount/Sentcount

describeBy(data.frame, group=data.frame$Category, mat=TRUE, digits=4)

Category = factor(Category)

#lm.fit.Fog <- lm(Fog~Category)
#lm.fit.TermstoWords <- lm(TermstoWords~Category)
#lm.fit.PCcomplex <- lm(PCcomplex~Category)
#lm.fit.FinancetoComplex <- lm(FinancetoComplex~Category)
#lm.fit.WordsperSentence <- lm(WordsperSentence~Category)
#summary(lm.fit.Fog)
#summary(lm.fit.TermstoWords)
#summary(lm.fit.FinancetoComplex)
#summary(glht(lm.fit.Fog, mcp(Category="Tukey")))
#summary(glht(lm.fit.TermstoWords, mcp(Category="Tukey")))
#summary(glht(lm.fit.FinancetoComplex, mcp(Category="Tukey")))

# Robustness
# Only doing robustness on the variables that 
# demonstrated significance in the baseline

#glm.fit.Fog <- glm(Fog~Category, family=Gamma(link='log'))
#glm.fit.TermstoWords <- glm(TermstoWords~Category, family=Gamma(link='log'))
#glm.fit.FinancetoComplex <- glm(FinancetoComplex~Category, family=Gamma(link='log'))

#summary(glm.fit.Fog)
#summary(glm.fit.TermstoWords)
#summary(glm.fit.FinancetoComplex)

#summary(glht(glm.fit.Fog, mcp(Category="Tukey")))
#summary(glht(glm.fit.TermstoWords, mcp(Category="Tukey")))
#summary(glht(glm.fit.FinancetoComplex, mcp(Category="Tukey")))

afog<-aov(Fog~Category)
aterms<-aov(TermstoWords~Category)
aPCcomplex<-aov(PCcomplex~Category)
aFinance<-aov(FinancetoComplex~Category)
aWords<-aov(WordsperSentence~Category)
aWordcount<-aov(Wordcount~Category)

summary(afog)
summary(aterms)
summary(aPCcomplex)
summary(aFinance)
summary(aWords)
summary(aWordcount)

TukeyHSD(afog)
TukeyHSD(aterms)
TukeyHSD(aPCcomplex)
TukeyHSD(aFinance)
TukeyHSD(aWords)
TukeyHSD(aWordcount)

bartlett.test(Fog~Category)
bartlett.test(TermstoWords~Category)
bartlett.test(PCcomplex~Category)
bartlett.test(FinancetoComplex~Category)
bartlett.test(WordsperSentence~Category)
bartlett.test(Wordcount~Category)

xpca <- data.frame(Fog, TermstoWords, PCcomplex, FinancetoComplex, WordsperSentence, Wordcount)

princompbjf<-princomp(xpca, cor=TRUE, scores=TRUE)

summary(princompbjf)

loadings(princompbjf)

#lab1<-rep(c(1, 0), c(31, 62))
#lab2<-rep(c(0, 1, 0), c(31, 31, 31))
#lab3<-rep(c(0, 1), c(62, 31))

pc1<-princompbjf$scores[,1]

pc2<-princompbjf$scores[,2]

pca.frame <- data.frame(pc1, pc2)

pch <- rep(c("0", "1", "2"), c(31, 31, 31))

with(pca.frame, plot(pc1, pc2, pch=pch, xlab="Score on first principle component", ylab="Score on second principle component"))

legend(0, -4, c("Pay Day Loan", "Personal Loan", "Credit Card"), pch=c("0","1","2"))

#plot(pc1, pc2*lab3, pch="2", xlab="Score on first principle component", ylab="Score on second principle component")

#points(pc1, pc2*lab1, pch="0")
#points(pc1, pc2*lab2, pch="1")
#legend(-2.5, -1.8, c("Pay Day Loan", "Personal Loan", "Credit Card"), pch=c("0", "1", "2"))

